@page "/"
@using MongoDB.Bson;
@using kiki.shared
@inject HttpClient Http

@if (posts == null) {
    <p><em>loading</em></p>
} else {
    <table class="table table-striped table-dark">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Source</th>
                <th scope="col">Post</th>
                <th scope="col">Title</th>
                <th scope="col">Author</th>
                <th scope="col">Date</th>
                <th scope="col">Link</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var post in posts) {
                <PostCard Post="@post" CommunityName="@GetCommunityName(post.Community)"></PostCard>
            }
        </tbody>
    </table>
}

@code {
    Post[] posts;
    Dictionary<ObjectId, string> communityNames;

    protected override async Task OnInitializedAsync() {
        posts = await Http.GetJsonAsync<Post[]>("/api/kiki/posts");
        var communities = await Http.GetJsonAsync<Community[]>("/api/kiki/communities");
        communityNames = new Dictionary<ObjectId, string>();
        foreach (var c in communities) {
            communityNames[c.Id] = c.Name;
        }
    }

    string GetCommunityName(ObjectId id) {
        return communityNames[id];
    }
}
